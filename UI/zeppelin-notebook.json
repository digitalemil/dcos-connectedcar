{"paragraphs":[{"text":"%md\nApp Spark Interpreter property: spark.cassandra.connection.host  node.cassandra.l4lb.thisdcos.directory  \n","dateUpdated":"Feb 7, 2017 12:30:09 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1486470604336_-1828254573","id":"20170207-123004_1812708204","result":{"code":"SUCCESS","type":"HTML","msg":"<p>App Spark Interpreter property: spark.cassandra.connection.host  node.cassandra.l4lb.thisdcos.directory</p>\n"},"dateCreated":"Feb 7, 2017 12:30:04 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:81","dateFinished":"Feb 7, 2017 12:30:10 PM","dateStarted":"Feb 7, 2017 12:30:09 PM","focus":true},{"text":"%dep\nz.load(\"org.apache.commons:commons-csv:1.2\")\nz.load(\"com.datastax.spark:spark-cassandra-connector_2.10:1.6.4\")","dateUpdated":"Feb 7, 2017 12:30:12 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1486470604338_-1827485075","id":"20170207-123004_947508287","result":{"code":"SUCCESS","type":"TEXT","msg":"res0: org.apache.zeppelin.spark.dep.Dependency = org.apache.zeppelin.spark.dep.Dependency@54d815c\n"},"dateCreated":"Feb 7, 2017 12:30:04 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:82","dateFinished":"Feb 7, 2017 12:30:19 PM","dateStarted":"Feb 7, 2017 12:30:12 PM","focus":true},{"text":"import com.datastax.spark.connector._\nval hrs = sqlContext\n  .read\n  .format(\"org.apache.spark.sql.cassandra\")\n  .options(Map( \"table\" -> \"hr\", \"keyspace\" -> \"mesonautsgym\"))\n  .load()\n  \n  hrs.show()","dateUpdated":"Feb 7, 2017 12:30:21 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala","tableHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1486470604339_-1827869824","id":"20170207-123004_1224558699","result":{"code":"SUCCESS","type":"TEXT","msg":"import com.datastax.spark.connector._\nhrs: org.apache.spark.sql.DataFrame = [id: bigint, color: string, deviceid: string, event_timestamp: string, heartrate: int, location: string, user: string]\n+-------------+----------+--------+--------------------+---------+--------------------+-----+\n|           id|     color|deviceid|     event_timestamp|heartrate|            location| user|\n+-------------+----------+--------+--------------------+---------+--------------------+-----+\n|1486470183044|0x80FF0000|   14321|2017-2-7T12:23:0....|      140|37.4419444,-122.1...| Tobi|\n|1486470197109|0x80FF0000|   12444|2017-2-7T12:23:0....|      148|43.479929,-110.76...|James|\n|1486470260320|0x80FF0000|   20452|2017-2-7T12:24:0....|      155|34.0522342,-118.2...| Tony|\n|1486470257313|0x80FF0000|   20452|2017-2-7T12:24:0....|      156|34.0522342,-118.2...| Tony|\n|1486470209151|0x80FF0000|   20452|2017-2-7T12:23:0....|      158|34.0522342,-118.2...| Tony|\n|1486470209144|0x80FF0000|   16380|2017-2-7T12:23:0....|      122| 37.775,-122.4183333|  Flo|\n|1486470200116|0x8000FF00|   15121|2017-2-7T12:23:0....|       91|    44.7694,-106.969|  Ben|\n|1486470229225|0x8000FF00|   19201|2017-2-7T12:23:0....|      108|42.3584308,-71.05...|Jamie|\n|1486470223200|0x80FF0000|   20452|2017-2-7T12:23:0....|      164|34.0522342,-118.2...| Tony|\n|1486470179030|0x8000FF00|   15121|2017-2-7T12:22:0....|       84|    44.7694,-106.969|  Ben|\n|1486470264329|0x80FF0000|   16453|2017-2-7T12:24:0....|      127|41.850033,-87.650...|  Tim|\n|1486470184047|0x80FF0000|   16380|2017-2-7T12:23:0....|      120| 37.775,-122.4183333|  Flo|\n|1486470258309|0x80FF0000|   16380|2017-2-7T12:24:0....|      129| 37.775,-122.4183333|  Flo|\n|1486470217173|0x8000FF00|   15121|2017-2-7T12:23:0....|       91|    44.7694,-106.969|  Ben|\n|1486470180039|0x8000FF00|   19201|2017-2-7T12:23:0....|      103|42.3584308,-71.05...|Jamie|\n|1486470196109|0x8000FF00|   19201|2017-2-7T12:23:0....|      109|42.3584308,-71.05...|Jamie|\n|1486470216170|0x80FF0000|   12444|2017-2-7T12:23:0....|      147|43.479929,-110.76...|James|\n|1486470247281|0x80FF0000|   20452|2017-2-7T12:24:0....|      168|34.0522342,-118.2...| Tony|\n|1486470255301|0x80FF0000|   16453|2017-2-7T12:24:0....|      121|41.850033,-87.650...|  Tim|\n|1486470198114|0x8000FF00|   19201|2017-2-7T12:23:0....|       99|42.3584308,-71.05...|Jamie|\n+-------------+----------+--------+--------------------+---------+--------------------+-----+\nonly showing top 20 rows\n\n"},"dateCreated":"Feb 7, 2017 12:30:04 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:83","dateFinished":"Feb 7, 2017 12:30:42 PM","dateStarted":"Feb 7, 2017 12:30:21 PM","focus":true},{"text":"hrs.registerTempTable(\"hr\");\nval df= sqlContext.sql(\"Select heartrate, deviceid, user from hr\")\ndf.show();","dateUpdated":"Feb 7, 2017 12:31:12 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala","tableHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1486470604339_-1827869824","id":"20170207-123004_1613759481","result":{"code":"SUCCESS","type":"TEXT","msg":"df: org.apache.spark.sql.DataFrame = [heartrate: int, deviceid: string, user: string]\n+---------+--------+-----+\n|heartrate|deviceid| user|\n+---------+--------+-----+\n|      140|   14321| Tobi|\n|      148|   12444|James|\n|      155|   20452| Tony|\n|      156|   20452| Tony|\n|      158|   20452| Tony|\n|      122|   16380|  Flo|\n|       91|   15121|  Ben|\n|      108|   19201|Jamie|\n|      164|   20452| Tony|\n|       84|   15121|  Ben|\n|      127|   16453|  Tim|\n|      120|   16380|  Flo|\n|      129|   16380|  Flo|\n|       91|   15121|  Ben|\n|      103|   19201|Jamie|\n|      109|   19201|Jamie|\n|      147|   12444|James|\n|      168|   20452| Tony|\n|      121|   16453|  Tim|\n|       99|   19201|Jamie|\n+---------+--------+-----+\nonly showing top 20 rows\n\n"},"dateCreated":"Feb 7, 2017 12:30:04 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:84","dateFinished":"Feb 7, 2017 12:30:46 PM","dateStarted":"Feb 7, 2017 12:30:44 PM","focus":true},{"text":"import scala.collection.Map\r\nval limits = Map(\"Flo\" -> 120, \"Tobi\" -> 120, \"Ben\" -> 120, \"Travis\" -> 120, \"James\" -> 120, \"Tim\" -> 120, \"Jamie\" -> 120, \"Tony\" -> 120, \"Joerg\" -> 120, \"Jan\" -> 120, \"Ferdi\" -> 120, \"John\"->120)\r\nval toLabel = (l: Int, v:Long) => if (v > l) 1 else 0 \r\nval deviceAndHRAndLimit = df.map(r => (r.getString(1).toInt, r.getInt(0), toLabel(limits.getOrElse(r.getString(2), 120), r.getInt(0)), r.getString(2)))","dateUpdated":"Feb 7, 2017 12:30:49 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1486470604339_-1827869824","id":"20170207-123004_1330189149","result":{"code":"SUCCESS","type":"TEXT","msg":"import scala.collection.Map\nlimits: scala.collection.Map[String,Int] = Map(John -> 120, Ferdi -> 120, Jan -> 120, Travis -> 120, Tony -> 120, Tobi -> 120, James -> 120, Tim -> 120, Ben -> 120, Jamie -> 120, Flo -> 120, Joerg -> 120)\ntoLabel: (Int, Long) => Int = <function2>\ndeviceAndHRAndLimit: org.apache.spark.rdd.RDD[(Int, Int, Int, String)] = MapPartitionsRDD[10] at map at <console>:37\n"},"dateCreated":"Feb 7, 2017 12:30:04 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:85","dateFinished":"Feb 7, 2017 12:30:50 PM","dateStarted":"Feb 7, 2017 12:30:49 PM","focus":true},{"text":"import org.apache.spark.mllib.util\r\nimport org.apache.spark.mllib\r\nimport org.apache.spark.mllib.tree.DecisionTree\r\nimport org.apache.spark.mllib.tree.model.DecisionTreeModel\r\nimport org.apache.spark.mllib.regression.LabeledPoint\r\nimport org.apache.spark.mllib.linalg.{Vector, Vectors}\r\n\r\nval numClasses = 2\r\nval categoricalFeaturesInfo = Map[Int, Int]()\r\nval impurity = \"gini\"\r\nval maxDepth = 5\r\nval maxBins = 32\r\n\r\nval splits = deviceAndHRAndLimit.map(tuple => LabeledPoint(tuple._3, Vectors.dense(tuple._1, tuple._2)))\r\n                              .randomSplit(Array(0.6, 0.4), seed = 11L)\r\n\r\nval (training, test) = (splits(0).cache(), splits(1))","dateUpdated":"Feb 7, 2017 12:31:17 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"tableHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1486470604339_-1827869824","id":"20170207-123004_971505319","result":{"code":"SUCCESS","type":"TEXT","msg":"import org.apache.spark.mllib.util\nimport org.apache.spark.mllib\nimport org.apache.spark.mllib.tree.DecisionTree\nimport org.apache.spark.mllib.tree.model.DecisionTreeModel\nimport org.apache.spark.mllib.regression.LabeledPoint\nimport org.apache.spark.mllib.linalg.{Vector, Vectors}\nnumClasses: Int = 2\ncategoricalFeaturesInfo: scala.collection.Map[Int,Int] = Map()\nimpurity: String = gini\nmaxDepth: Int = 5\nmaxBins: Int = 32\nsplits: Array[org.apache.spark.rdd.RDD[org.apache.spark.mllib.regression.LabeledPoint]] = Array(MapPartitionsRDD[15] at randomSplit at <console>:54, MapPartitionsRDD[16] at randomSplit at <console>:54)\ntraining: org.apache.spark.rdd.RDD[org.apache.spark.mllib.regression.LabeledPoint] = MapPartitionsRDD[15] at randomSplit at <console>:54\ntest: org.apache.spark.rdd.RDD[org.apache.spark.mllib.regression.LabeledPoint] = MapPartitionsRDD[16] at randomSplit at <console>:54\n"},"dateCreated":"Feb 7, 2017 12:30:04 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:86","dateFinished":"Feb 7, 2017 12:31:18 PM","dateStarted":"Feb 7, 2017 12:31:17 PM","focus":true},{"text":"training.take(20).foreach(println)","dateUpdated":"Feb 7, 2017 12:30:59 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"tableHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1486470604339_-1827869824","id":"20170207-123004_461064160","result":{"code":"SUCCESS","type":"TEXT","msg":"(1.0,[14321.0,140.0])\n(1.0,[12444.0,148.0])\n(1.0,[20452.0,158.0])\n(1.0,[16380.0,122.0])\n(0.0,[15121.0,91.0])\n(0.0,[19201.0,108.0])\n(1.0,[20452.0,164.0])\n(0.0,[19201.0,103.0])\n(0.0,[19201.0,109.0])\n(1.0,[12444.0,147.0])\n(1.0,[20452.0,168.0])\n(1.0,[16453.0,121.0])\n(0.0,[19201.0,99.0])\n(0.0,[17445.0,102.0])\n(1.0,[16380.0,124.0])\n(0.0,[17445.0,117.0])\n(0.0,[16380.0,115.0])\n(0.0,[19201.0,96.0])\n(1.0,[14321.0,136.0])\n(1.0,[14321.0,130.0])\n"},"dateCreated":"Feb 7, 2017 12:30:04 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:87","dateFinished":"Feb 7, 2017 12:31:01 PM","dateStarted":"Feb 7, 2017 12:30:59 PM","focus":true},{"text":"import org.apache.spark.mllib.classification.{LogisticRegressionModel, LogisticRegressionWithLBFGS}\nimport org.apache.spark.mllib.evaluation.MulticlassMetrics\nimport org.apache.spark.mllib.regression.LabeledPoint\nimport org.apache.spark.mllib.util.MLUtils\n\nval model = new LogisticRegressionWithLBFGS().setNumClasses(2).run(training)","dateUpdated":"Feb 7, 2017 12:31:22 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1486470604339_-1827869824","id":"20170207-123004_2067050685","dateCreated":"Feb 7, 2017 12:30:04 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:88","dateFinished":"Feb 7, 2017 12:31:35 PM","dateStarted":"Feb 7, 2017 12:31:22 PM","result":{"code":"SUCCESS","type":"TEXT","msg":"import org.apache.spark.mllib.classification.{LogisticRegressionModel, LogisticRegressionWithLBFGS}\nimport org.apache.spark.mllib.evaluation.MulticlassMetrics\nimport org.apache.spark.mllib.regression.LabeledPoint\nimport org.apache.spark.mllib.util.MLUtils\nmodel: org.apache.spark.mllib.classification.LogisticRegressionModel = org.apache.spark.mllib.classification.LogisticRegressionModel: intercept = 0.0, numFeatures = 2, numClasses = 2, threshold = 0.5\n"},"focus":true},{"text":"val predictionsAndLabels = test.map { case LabeledPoint(label, features) =>\r\n  val prediction = model.predict(features)\r\n  (prediction, label)\r\n}\r\n\r\npredictionsAndLabels.collect()","dateUpdated":"Feb 7, 2017 12:31:38 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1486470604342_-1829024071","id":"20170207-123004_1682928173","dateCreated":"Feb 7, 2017 12:30:04 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:89","dateFinished":"Feb 7, 2017 12:31:42 PM","dateStarted":"Feb 7, 2017 12:31:38 PM","result":{"code":"SUCCESS","type":"TEXT","msg":"predictionsAndLabels: org.apache.spark.rdd.RDD[(Double, Double)] = MapPartitionsRDD[64] at map at <console>:55\nres20: Array[(Double, Double)] = Array((1.0,1.0), (1.0,1.0), (0.0,0.0), (1.0,1.0), (1.0,0.0), (1.0,1.0), (0.0,0.0), (0.0,0.0), (1.0,1.0), (0.0,0.0), (1.0,1.0), (0.0,0.0), (1.0,1.0), (1.0,1.0), (1.0,1.0), (0.0,0.0), (1.0,1.0), (1.0,1.0), (0.0,0.0), (0.0,0.0), (1.0,1.0), (0.0,0.0), (0.0,0.0), (1.0,1.0), (1.0,1.0), (0.0,0.0), (0.0,0.0), (1.0,0.0), (0.0,0.0), (1.0,1.0), (1.0,1.0), (0.0,0.0), (1.0,1.0), (1.0,0.0), (1.0,1.0), (1.0,1.0), (0.0,0.0), (1.0,1.0), (1.0,1.0), (1.0,1.0), (1.0,1.0), (1.0,1.0), (0.0,0.0), (1.0,1.0), (0.0,0.0), (0.0,0.0), (0.0,0.0), (1.0,1.0), (1.0,1.0), (1.0,1.0), (1.0,1.0), (0.0,0.0), (0.0,0.0), (0.0,0.0), (0.0,0.0), (0.0,0.0), (1.0,1.0), (1.0,1.0), (1.0,1.0), (0.0,0.0), (0.0,0.0), (0.0,0.0), (1.0,1.0), (1.0,1.0), (0.0,0.0), (1.0,1.0), (0.0,0.0), (1.0,1.0), (0.0,0.0),..."},"focus":true},{"text":"import org.apache.spark.mllib.evaluation.MulticlassMetrics\r\nval metrics = new MulticlassMetrics(predictionsAndLabels)\r\n\r\nprintln(metrics.confusionMatrix)\r\nprintln(\"Please use above values in the pmml below\")\r\nprintln(metrics.precision)\r\n","dateUpdated":"Feb 7, 2017 12:32:11 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1486470604343_-1829408820","id":"20170207-123004_2061913214","dateCreated":"Feb 7, 2017 12:30:04 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:90","dateFinished":"Feb 7, 2017 12:32:25 PM","dateStarted":"Feb 7, 2017 12:32:11 PM","result":{"code":"SUCCESS","type":"TEXT","msg":"import org.apache.spark.mllib.evaluation.MulticlassMetrics\nmetrics: org.apache.spark.mllib.evaluation.MulticlassMetrics = org.apache.spark.mllib.evaluation.MulticlassMetrics@19a054ae\n130.0  4.0    \n0.0    173.0  \nPlease use above values in the pmml below\n0.9869706840390879\n"},"focus":true},{"text":"println(model.toPMML)","dateUpdated":"Feb 7, 2017 12:30:04 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala","tableHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1486470604343_-1829408820","id":"20170207-123004_604765832","result":{"code":"SUCCESS","type":"TEXT","msg":"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<PMML version=\"4.2\" xmlns=\"http://www.dmg.org/PMML-4_2\">\n    <Header description=\"logistic regression\">\n        <Application name=\"Apache Spark MLlib\" version=\"0.5.6-incubating\"/>\n        <Timestamp>2017-02-07T11:39:50</Timestamp>\n    </Header>\n    <DataDictionary numberOfFields=\"3\">\n        <DataField name=\"field_0\" optype=\"continuous\" dataType=\"double\"/>\n        <DataField name=\"field_1\" optype=\"continuous\" dataType=\"double\"/>\n        <DataField name=\"target\" optype=\"categorical\" dataType=\"string\"/>\n    </DataDictionary>\n    <RegressionModel modelName=\"logistic regression\" functionName=\"classification\" normalizationMethod=\"logit\">\n        <MiningSchema>\n            <MiningField name=\"field_0\" usageType=\"active\"/>\n            <MiningField name=\"field_1\" usageType=\"active\"/>\n            <MiningField name=\"target\" usageType=\"target\"/>\n        </MiningSchema>\n        <RegressionTable intercept=\"0.0\" targetCategory=\"1\">\n            <NumericPredictor name=\"field_0\" coefficient=\"-1.178738628377715\"/>\n            <NumericPredictor name=\"field_1\" coefficient=\"160.79489825331888\"/>\n        </RegressionTable>\n        <RegressionTable intercept=\"-0.0\" targetCategory=\"0\"/>\n    </RegressionModel>\n</PMML>\n\n"},"dateCreated":"Feb 7, 2017 12:30:04 PM","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:91"},{"text":"%sh\n\nexport PMML='<?xml version=\"1.0\"?>\n<PMML version=\"4.1\" xmlns=\"http://www.dmg.org/PMML-4_1\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.dmg.org/PMML-4_2 http://www.dmg.org/v4-2/pmml-4-1.xsd\">\n<Header copyright=\"Copyright (c) 2015 emil\" description=\"RPart Decision Tree Model\">\n<Extension name=\"user\" value=\"emil\" extender=\"R/PMML\"/>\n<Application name=\"R/PMML\" version=\"1.4\"/>\n<Timestamp>2015-02-17 13:42:44</Timestamp>\n</Header>\n<DataDictionary numberOfFields=\"2\">\n<DataField name=\"Color\" dataType=\"string\">\n<Interval closure=\"closedClosed\" leftMargin=\"0\" rightMargin=\"1\"/>\n</DataField>\n<DataField name=\"heartrate\" optype=\"continuous\" dataType=\"double\">\n<Interval closure=\"closedClosed\" leftMargin=\"0\" rightMargin=\"240\"/>\n</DataField>\n</DataDictionary>\n<TreeModel modelName=\"Model\" functionName=\"classification\" algorithmName=\"rpart\" splitCharacteristic=\"binarySplit\" missingValueStrategy=\"defaultChild\">\n<MiningSchema>\n<MiningField name=\"Color\" usageType=\"predicted\"/>\n<MiningField name=\"heartrate\" usageType=\"active\"/>\n</MiningSchema>\n<Output>\n<OutputField name=\"Predicted_Color\" optype=\"categorical\" dataType=\"string\" feature=\"predictedValue\"/>\n<OutputField name=\"Probability_0\" optype=\"continuous\" dataType=\"double\" feature=\"probability\" value=\"0\"/>\n<OutputField name=\"Probability_1\" optype=\"continuous\" dataType=\"double\" feature=\"probability\" value=\"1\"/>\n</Output>\n<Node id=\"1\" score=\"0\" recordCount=\"24\" defaultChild=\"2\">\n<True/>\n<ScoreDistribution value=\"0x80FF0000\" recordCount=\"19\" confidence=\"2171.0\"/>\n<ScoreDistribution value=\"0x8000FF00\" recordCount=\"5\" confidence=\"0.0\"/>\n<Node id=\"2\" score=\"0x80FF0000\" recordCount=\"17\">\n<SimplePredicate field=\"heartrate\" operator=\"greaterOrEqual\" value=\"120\"/>\n<ScoreDistribution value=\"0x80FF0000\" recordCount=\"17\" confidence=\"1\"/>\n<ScoreDistribution value=\"0x8000FF00\" recordCount=\"0\" confidence=\"0\"/>\n</Node>\n<Node id=\"3\" score=\"0x8000FF00\" recordCount=\"7\">\n<SimplePredicate field=\"heartrate\" operator=\"lessThan\" value=\"120\"/>\n<ScoreDistribution value=\"0x80FF0000\" recordCount=\"2\" confidence=\"0.0\"/>\n<ScoreDistribution value=\"0x8000FF00\" recordCount=\"5\" confidence=\"2663.0\"/>\n</Node>\n</Node>\n</TreeModel>\n</PMML>'\necho $PMML>model.tmp\ncurl -X POST -d @model.tmp http://YOUR PUBLIC AGENT ELB/model\nrm model.tmp\n","dateUpdated":"Feb 7, 2017 12:30:04 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/sh","tableHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1486470604343_-1829408820","id":"20170207-123004_987699015","result":{"code":"ERROR","type":"TEXT","msg":"Process exited with an error: 127 (Exit value: 127)"},"dateCreated":"Feb 7, 2017 12:30:04 PM","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:92"},{"dateUpdated":"Feb 7, 2017 12:30:04 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1486470604343_-1829408820","id":"20170207-123004_1922181598","dateCreated":"Feb 7, 2017 12:30:04 PM","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:93"}],"name":"Mesonaut's Gym","id":"2C7WR2X6F","angularObjects":{"2C9A7PAYN":[],"2CAKGDEA5":[],"2C97761RR":[],"2C8BQPR3C":[],"2C8WC4GRU":[],"2C96FA63E":[],"2C9VPUJ9N":[],"2CABHGUFN":[],"2C7PVRWUC":[],"2C842N7CE":[],"2C9SW38WU":[],"2C9PNGC66":[],"2CB95YCKS":[],"2C8XAFXYN":[]},"config":{"looknfeel":"default"},"info":{}}